
// --------------------------------------------------------------------------------
// Copyright (c) 2025 Igor Ryabov (https://github.com/IgorRyaboff/Instrumentiki)
// License: https://github.com/IgorRyaboff/Instrumentiki/blob/main/LICENSE
// --------------------------------------------------------------------------------

// Параметры формы:
//  ОписаниеИнформационнойБазы - Структура - См. НовоеОписаниеИнформационнойБазы() формы АдминистрированиеСервера
//  ЭтоНовая - Булево - "Истина" - добавляется новая ИБ, "Ложь" - изменяется существующая
//  ИменаПрофилейБезопасности - Массив - Опциональный параметр. Имена (тип Строка) профилей безопасности кластера
//
// Параметр закрытия:
//  Неопределено - Нажатие кнопки "Отмена"
//  Структура - Заполненное описание информационной базы
//              См. НовоеОписаниеИнформационнойБазы() формы АдминистрированиеСервера

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОписаниеИнформационнойБазы = Параметры.ОписаниеИнформационнойБазы;
	ЭтоНовая = Параметры.ЭтоНовая;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОписаниеИнформационнойБазы, ИменаСвойствДляЗаполненияПараметровСоединенияИБ());
	
	Если ЭтоНовая Тогда
		Заголовок = НСтр("ru='Информационная база (создание)'");
		Элементы.ГруппаБлокировкаНачалаСеансов.ТолькоПросмотр = Истина;
		Команды.Найти("ЗаписатьИЗакрыть").Заголовок = НСтр("ru='Создать и закрыть'");
	Иначе
		Заголовок = СтрШаблон(НСтр("ru='Информационная база ""%1""'"), ОписаниеИнформационнойБазы.Имя);
		Элементы.Имя.ТолькоПросмотр = Истина;
		Элементы.ЗащищенноеСоединение.ТолькоПросмотр = Истина;
		Элементы.СоздатьБазуДанных.ТолькоПросмотр = Истина;
		
		Элементы.СмещениеДат.ТолькоПросмотр = Истина;
		Элементы.СмещениеДат.СписокВыбора.НайтиПоЗначению(0).Представление = НСтр("ru='<только для новой ИБ>'");
	КонецЕсли;
	
	Если Параметры.ИменаПрофилейБезопасности <> Неопределено И Параметры.ИменаПрофилейБезопасности.Количество() > 0 Тогда
		Для Каждого ИмяПрофиля Из Параметры.ИменаПрофилейБезопасности Цикл
			Элементы.ПрофильБезопасности.СписокВыбора.Добавить(ИмяПрофиля);
			Элементы.ПрофильБезопасностиБезопасногоРежима.СписокВыбора.Добавить(ИмяПрофиля);
		КонецЦикла;
		
		Элементы.ПрофильБезопасности.КнопкаВыпадающегоСписка = Истина;
		Элементы.ПрофильБезопасностиБезопасногоРежима.КнопкаВыпадающегоСписка = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьСпискиВыбора();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Отказ = Истина;
		
		Если Не ЗавершениеРаботы Тогда
			ЗапроситьЗакрытиеАсинх();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	ЗаполнитьСпискиВыбора();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	ЗаполнитьЗначенияСвойств(ОписаниеИнформационнойБазы, ЭтотОбъект, ИменаСвойствДляЗаполненияПараметровСоединенияИБ());
	Закрыть(ОписаниеИнформационнойБазы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИменаСвойствДляЗаполненияПараметровСоединенияИБ()
	Возврат "Имя, Описание, ЗащищенноеСоединение, БлокировкаНачалаСеансов, БлокировкаРегламентныхЗаданий, ОбязательноеВнешнееУправление, РазрешитьВыдачуЛицензийСервером, РезервированиеРабочихПроцессов, ВнешнееУправлениеСеансами, ПрофильБезопасности, ПрофильБезопасностиБезопасногоРежима, ТипСУБД, ИмяБазыСУБД, ЛогинСУБД, ПарольСУБД, СерверСУБД, НачалоБлокировкиСеансов, ОкончаниеБлокировкиСеансов, КодРазрешения, ПараметрБлокировкиСеансов, СообщениеБлокировкиСеансов, КодЯзыка, СоздатьБазуДанных, СмещениеДат";
КонецФункции

&НаКлиенте
Асинх Процедура ЗапроситьЗакрытиеАсинх()
	Ответ = Ждать ВопросАсинх(НСтр("ru='Есть несохраненные изменения. Вы уверены, что хотите закрыть форму?'"), РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбора()
	Элементы.ИмяБазыСУБД.СписокВыбора.Очистить();
	Если ЗначениеЗаполнено(Имя) Тогда
		Элементы.ИмяБазыСУБД.СписокВыбора.Добавить(Имя);
	КонецЕсли;
	
	Элементы.ЛогинСУБД.СписокВыбора.Очистить();
	Если ТипСУБД = "MSSQLServer" Тогда
		Элементы.ЛогинСУБД.СписокВыбора.Добавить("sa");
	ИначеЕсли ТипСУБД = "PostgreSQL" Тогда
		Элементы.ЛогинСУБД.СписокВыбора.Добавить("postgres");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
