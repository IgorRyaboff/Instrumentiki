
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МодульОбъекта = РеквизитФормыВЗначение("Объект");
	ТипЛюбаяСсылка = МодульОбъекта.ТипЛюбаяСсылка(Ложь);
	Элементы.ТипОбъекта.ДоступныеТипы = ТипЛюбаяСсылка;
	
	УстановитьУсловноеОформление();
	НастроитьКнопкиКоманднойПанели();
	
	СтрРеквизиты = СписокРеквизитов.Добавить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	ПриИзмененииТипаОбъектаДляОтбораНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИзменяемыеОбъекты

&НаКлиенте
Процедура ИзменяемыеОбъектыПриИзменении(Элемент)
	УстановитьПредставлениеКоличестваВыбранныхОбъектов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ИзменяемыеОбъектыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ИзменяемыеОбъектыЗначение" Тогда
		СтандартнаяОбработка = Ложь;
		Ссылка = Элементы.ИзменяемыеОбъекты.ТекущиеДанные.Значение;
		ПоказатьЗначение(, Ссылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокРеквизитовДляАлгоритма

&НаКлиенте
Процедура СписокРеквизитовДляАлгоритмаНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	ИмяРеквизита = Элемент.ТекущиеДанные.Имя;
	ПараметрыПеретаскивания.Значение = "Объект." + ИмяРеквизита;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ОтобратьОбъекты(Команда)
	Состояние("Вычисление количества объектов...");
	КоличествоОбъектов = КоличествоОтбираемыхОбъектов(АдресСКД, КомпоновщикНастроек);
	Состояние();
	
	Если КоличествоОбъектов = 0 Тогда
		ПоказатьПредупреждение(, "Нет объектов, удовлетворяющих условиям отбора");
		Возврат;
	КонецЕсли;
	
	Шаблон = "Будет %1. Продолжить?";
	ШаблонКоличества = "; выбран %1 объект; ; выбрано %1 объекта; выбрано %1 объектов; выбрано %1 объекта";
	КоличествоСтрокой = СтрокаСЧислом(ШаблонКоличества, КоличествоОбъектов, ВидЧисловогоЗначения.Количественное);
	ТекстВопроса = СтрШаблон(Шаблон, КоличествоСтрокой);
	
	Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Состояние("Выбор объектов...");
	ОтобратьОбъектыНаСервере();
	Состояние();
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКНастройкеОтбора(Команда)
	Элементы.СтраницыЭтапы.ТекущаяСтраница = Элементы.СтраницаЭтапОтборОбъектов;
	НастроитьКнопкиКоманднойПанели();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКУстановкеРеквизитов(Команда)
	ЕстьВыбранныеОбъекты = Ложь;
	Для Каждого Элемент Из ИзменяемыеОбъекты Цикл
		Если Элемент.Пометка Тогда
			ЕстьВыбранныеОбъекты = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если Не ЕстьВыбранныеОбъекты Тогда
		ПоказатьПредупреждение(, "Не выбрано ни одного объекта для изменения");
		Возврат;
	КонецЕсли;
	
	ПерейтиКУстановкеРеквизитовНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКВыборуОбъектов(Команда)
	Элементы.СтраницыЭтапы.ТекущаяСтраница = Элементы.СтраницаЭтапВыборОбъектов;
	НастроитьКнопкиКоманднойПанели();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРеквизитыОбъектов(Команда)
	ВсеСсылки = Новый Массив;
	Для Каждого ЭлементСписка Из ИзменяемыеОбъекты Цикл
		Если ЭлементСписка.Пометка Тогда
			ВсеСсылки.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыИзмененияРеквизитов = НовыеПараметрыИзмененияРеквизитов();
	ПараметрыИзмененияРеквизитов.АлгоритмПрограммнойОбработки = АлгоритмОбработки;
	
	Для Каждого СтрРеквизиты Из СписокРеквизитов Цикл
		Если Не СтрРеквизиты.Изменить Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеИзменяемогоРеквизита = НовоеОписаниеИзменяемогоРеквизита();
		ОписаниеИзменяемогоРеквизита.Имя = СтрРеквизиты.Имя;
		
		Если СтрРеквизиты.ИспользоватьВыражение Тогда
			ОписаниеИзменяемогоРеквизита.ИспользоватьВыражение = Истина;
			ОписаниеИзменяемогоРеквизита.Выражение = СтрРеквизиты.Выражение;
		Иначе
			ОписаниеИзменяемогоРеквизита.Значение = СтрРеквизиты.Значение;
		КонецЕсли;
		
		ПараметрыИзмененияРеквизитов.ИзменяемыеРеквизиты.Добавить(ОписаниеИзменяемогоРеквизита);
	КонецЦикла;
	
	Обработано = 0;
	Для Каждого Ссылка Из ВсеСсылки Цикл
		ПараметрыИзмененияРеквизитов.Ссылки.Добавить(Ссылка);
		
		Если ПараметрыИзмененияРеквизитов.Ссылки.Количество() >= 5 Тогда
			Состояние("Изменение реквизитов...", Цел(Обработано / ВсеСсылки.Количество() * 100));
			Обработано = Обработано + ПараметрыИзмененияРеквизитов.Ссылки.Количество();
			
			ИзменитьРеквизитыОбъектовНаСервере(ПараметрыИзмененияРеквизитов);
			ПараметрыИзмененияРеквизитов.Ссылки.Очистить();
			ОбработкаПрерыванияПользователя();
		КонецЕсли;
	КонецЦикла;
	
	Состояние("Изменение завершено");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция НовоеОписаниеИзменяемогоРеквизита()
	Описание = Новый Структура;
	
	Описание.Вставить("Имя", "");
	Описание.Вставить("ИспользоватьВыражение", Ложь);
	Описание.Вставить("Значение", );
	Описание.Вставить("Выражение", "");
	
	Возврат Описание;
КонецФункции

&НаСервере
Функция ПриИзмененииТипаОбъектаДляОтбораНаСервере()
	Если ЗначениеЗаполнено(АдресСКД) Тогда
		УдалитьИзВременногоХранилища(АдресСКД);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипОбъекта) Тогда
		Элементы.КомпоновщикНастроекНастройкиОтбор.Видимость = Истина;
		Схема = СКДПоТипуОбъекта(ТипОбъекта.Типы()[0]);
		АдресСКД = ПоместитьВоВременноеХранилище(Схема, УникальныйИдентификатор);
		
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКД));
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	Иначе
		Элементы.КомпоновщикНастроекНастройкиОтбор.Видимость = Ложь;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция СКДПоТипуОбъекта(Тип)
	Схема = Новый СхемаКомпоновкиДанных;
	ИсточникДанных = Схема.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных1";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	ПустаяСсылка = Новый(Тип);
	ИмяТаблицы = ПустаяСсылка.Метаданные().ПолноеИмя();
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	*
		|ИЗ
		|	&ИмяТаблицы КАК Таблица";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяТаблицы", ИмяТаблицы);
	НаборДанных = Схема.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "НаборДанных1";
	НаборДанных.Запрос = ТекстЗапроса;
	НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
	
	Ресурс = Схема.ПоляИтога.Добавить();
	Ресурс.ПутьКДанным = "Количество";
	Ресурс.Выражение = "Количество(Ссылка)";
	
	Возврат Схема;
КонецФункции

&НаСервереБезКонтекста
Функция КоличествоОтбираемыхОбъектов(Знач АдресСКД, Знач КомпоновщикНастроек)
	Таблица = ВыполнитьСКД(АдресСКД, КомпоновщикНастроек, "Количество");
	Возврат ?(Таблица.Количество() > 0, Таблица[0].Количество, 0);
КонецФункции

&НаСервереБезКонтекста
Функция ВыполнитьСКД(АдресСКД, КомпоновщикНастроек, Режим)
	Схема = ПолучитьИзВременногоХранилища(АдресСКД);
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	Группировка = Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	Если Режим = "Количество" Тогда
		Группировка.ПоляГруппировки.Элементы.Добавить(Тип("АвтоПолеГруппировкиКомпоновкиДанных"));
		
		ВыбранноеПоле = Группировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Количество");
	ИначеЕсли Режим = "Ссылки" Тогда
		Тип = Тип("ПолеГруппировкиКомпоновкиДанных");
		ПолеГруппировки = Группировка.ПоляГруппировки.Элементы.Добавить(Тип);
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("Ссылка");
		
		ВыбранноеПоле = Группировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Ссылка");
	Иначе
		ВызватьИсключение "Недопустимый режим выполнения СКД";
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(Схема, Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет);
	
	Таблица = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(Таблица);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Возврат Таблица;
КонецФункции

&НаСервере
Процедура ОтобратьОбъектыНаСервере()
	Таблица = ВыполнитьСКД(АдресСКД, КомпоновщикНастроек, "Ссылки");
	
	ИзменяемыеОбъекты.Очистить();
	Если Таблица.Количество() > 0 Тогда
		ИзменяемыеОбъекты.ЗагрузитьЗначения(Таблица.ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	
	Для Каждого СтрОбъекты Из ИзменяемыеОбъекты Цикл
		СтрОбъекты.Пометка = Истина;
	КонецЦикла;
	
	Элементы.СтраницыЭтапы.ТекущаяСтраница = Элементы.СтраницаЭтапВыборОбъектов;
	НастроитьКнопкиКоманднойПанели();
	УстановитьПредставлениеКоличестваВыбранныхОбъектов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура НастроитьКнопкиКоманднойПанели()
	ВыбранаСтраницаОтбор = (Элементы.СтраницыЭтапы.ТекущаяСтраница = Элементы.СтраницаЭтапОтборОбъектов);
	ВыбранаСтраницаВыбор = (Элементы.СтраницыЭтапы.ТекущаяСтраница = Элементы.СтраницаЭтапВыборОбъектов);
	ВыбранаСтраницаУстановка = (Элементы.СтраницыЭтапы.ТекущаяСтраница = Элементы.СтраницаЭтапУстановкаРеквизитов);
	
	Элементы.ФормаГруппаОтборОбъектов.Видимость = ВыбранаСтраницаОтбор;
	Элементы.ФормаГруппаВыборОбъектов.Видимость = ВыбранаСтраницаВыбор;
	Элементы.ФормаГруппаУстановкаРеквизитов.Видимость = ВыбранаСтраницаУстановка;
	
	Если ВыбранаСтраницаОтбор Тогда
		Элементы.ФормаОтобратьОбъекты.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ВыбранаСтраницаВыбор Тогда
		Элементы.ФормаПерейтиКУстановкеРеквизитов.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ВыбранаСтраницаУстановка Тогда
		Элементы.ФормаИзменитьРеквизитыОбъектов.КнопкаПоУмолчанию = Истина;
	Иначе
		ВызватьИсключение "Недопустимая текущая страница";
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПредставлениеКоличестваВыбранныхОбъектов(Форма)
	ВсегоОбъектов = Форма.ИзменяемыеОбъекты.Количество();
	
	ВыбраноОбъектов = 0;
	Для Каждого Элемент Из Форма.ИзменяемыеОбъекты Цикл
		Если Элемент.Пометка Тогда
			ВыбраноОбъектов = ВыбраноОбъектов + 1;
		КонецЕсли;
	КонецЦикла;
	
	Шаблон = "Всего отобрано: %1, отмечено к изменению: %2";
	Текст = СтрШаблон(Шаблон, ВсегоОбъектов, Формат(ВыбраноОбъектов, "ЧН=0"));
	Форма.Элементы.НадписьВыбраноОбъектов.Заголовок = Текст;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();
	ДобавитьОформлениеВидимостьКолонокЗначенияРеквизитов(УсловноеОформление);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьОформлениеВидимостьКолонокЗначенияРеквизитов(УсловноеОформление)
	#Область ВидимостьКолонкиЗначение
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	Отбор = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРеквизитов.ИспользоватьВыражение");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Истина;
	
	Поле = ЭлементУО.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("СписокРеквизитовЗначение");
	
	#КонецОбласти
	
	#Область ВидимостьКолонкиВыражение
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	Отбор = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРеквизитов.ИспользоватьВыражение");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Ложь;
	
	Поле = ЭлементУО.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("СписокРеквизитовВыражение");
	
	#КонецОбласти
	
	#Область ДоступностьРедактированияЗначенияИлиВыражения
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСерый);
	
	Отбор = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРеквизитов.Изменить");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Ложь;
	
	Поле = ЭлементУО.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("СписокРеквизитовЗначение");
	Поле = ЭлементУО.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("СписокРеквизитовВыражение");
	
	#КонецОбласти
	
	#Область ДоступностьОтключенияИзмененияВыражением
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	Отбор = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокРеквизитов.НевозможноИзменитьИнтерактивно");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Истина;
	
	Поле = ЭлементУО.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("СписокРеквизитовИспользоватьВыражение");
	
	#КонецОбласти
КонецПроцедуры

&НаСервере
Процедура ПерейтиКУстановкеРеквизитовНаСервере()
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(ИзменяемыеОбъекты[0].Значение));
	ИсточникСпискаРеквизитов = ТаблицаРеквизитовОбъектаМетаданных(ОбъектМетаданных);
	СписокРеквизитов.Загрузить(ИсточникСпискаРеквизитов);
	
	Отбор = Новый Структура("НевозможноИзменитьИнтерактивно", Истина);
	СтрокиБезИнтерактивногоИзменения = СписокРеквизитов.НайтиСтроки(Отбор);
	Для Каждого СтрРеквизиты Из СтрокиБезИнтерактивногоИзменения Цикл
		СтрРеквизиты.ИспользоватьВыражение = Истина;
	КонецЦикла;
	
	Элементы.СтраницыЭтапы.ТекущаяСтраница = Элементы.СтраницаЭтапУстановкаРеквизитов;
	НастроитьКнопкиКоманднойПанели();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТаблицаРеквизитовОбъектаМетаданных(ОбъектМетаданных)
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	ТаблицаРеквизитов.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка"));
	ТаблицаРеквизитов.Колонки.Добавить("ТипЗначения", Новый ОписаниеТипов("ОписаниеТипов"));
	ТаблицаРеквизитов.Колонки.Добавить("НевозможноИзменитьИнтерактивно", Новый ОписаниеТипов("Булево"));
	
	КоллекцииРеквизитов = Новый Массив;
	КоллекцииРеквизитов.Добавить(ОбъектМетаданных.СтандартныеРеквизиты);
	КоллекцииРеквизитов.Добавить(ОбъектМетаданных.Реквизиты);
	
	Для Каждого КоллекцияРеквизитов Из КоллекцииРеквизитов Цикл
		Для Каждого Реквизит Из КоллекцияРеквизитов Цикл
			Если Реквизит.Имя = "Ссылка" Тогда
				Продолжить;
			КонецЕсли;
			
			СтрРеквизиты = ТаблицаРеквизитов.Добавить();
			СтрРеквизиты.Имя = Реквизит.Имя;
			СтрРеквизиты.Синоним = Реквизит.Синоним;
			СтрРеквизиты.ТипЗначения = Реквизит.Тип;
			
			Если Реквизит.Тип.СодержитТип(Тип("ХранилищеЗначения")) Тогда
				СтрРеквизиты.НевозможноИзменитьИнтерактивно = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаРеквизитов;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НовыеПараметрыИзмененияРеквизитов()
	Параметры = Новый Структура;
	
	Параметры.Вставить("Ссылки", Новый Массив);
	Параметры.Вставить("ИзменяемыеРеквизиты", Новый Массив);
	Параметры.Вставить("АлгоритмПрограммнойОбработки", "");
	Параметры.Вставить("ОбменДаннымиЗагрузка", Ложь);
	Параметры.Вставить("ВыполнятьВТранзакции", Ложь);
	Параметры.Вставить("ПрерыватьПриОшибке", Ложь);
	Параметры.Вставить("ЗаписьВыполняетсяАлгоритмом", Ложь);
	
	Возврат Параметры;
КонецФункции

&НаСервереБезКонтекста
Функция ИзменитьРеквизитыОбъектовНаСервере(Знач Параметры)
	Если Параметры.ВыполнятьВТранзакции И Не ТранзакцияАктивна() Тогда
		Возврат ИзменитьРеквизитыОбъектовВТранзакции(Параметры);
	КонецЕсли;
	
	РезультатыОбработки = Новый Массив;
	Для Каждого Ссылка Из Параметры.Ссылки Цикл
		Объект = Ссылка.ПолучитьОбъект();
		
		Для Каждого СтрЗначенияРеквизитов Из Параметры.ЗначенияРеквизитов Цикл
			Если СтрЗначенияРеквизитов.ИспользоватьВыражение Тогда
				Объект[СтрЗначенияРеквизитов.Имя] = ВычислитьЗначениеРеквизита(Объект, СтрЗначенияРеквизитов.Выражение);
			Иначе
				Объект[СтрЗначенияРеквизитов.Имя] = СтрЗначенияРеквизитов.Значение;
			КонецЕсли;
		КонецЦикла;
		
		Результат = НовыйРезультатОбработкиОбъекта();
		Результат.Ссылка = Ссылка;
		РезультатыОбработки.Добавить(Результат);
		Попытка
			ВыполнитьПрограммнуюОбработку(Объект, Параметры.АлгоритмПрограммнойОбработки);
			
			Если Не Параметры.ЗаписьВыполняетсяАлгоритмом Тогда
				Объект.Записать();
			КонецЕсли;
			
			Результат.Обработан = Истина;
		Исключение
			Результат.ИнформацияОбОшибке = ИнформацияОбОшибке();
			Если Параметры.ПрерыватьПриОшибке И Не Параметры.ВыполнятьВТранзакции Тогда
				Прервать;
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	
	Возврат РезультатыОбработки;
КонецФункции

&НаСервереБезКонтекста
Функция НовыйРезультатОбработкиОбъекта()
	Ошибка = Новый Структура;
	
	Ошибка.Вставить("Ссылка");
	Ошибка.Вставить("Обработан", Ложь);
	Ошибка.Вставить("ИнформацияОбОшибке");
	
	Возврат Ошибка;
КонецФункции

&НаСервереБезКонтекста
Функция ИзменитьРеквизитыОбъектовВТранзакции(Параметры)
	Результат = Неопределено;
	
	НачатьТранзакцию();
	Попытка
		Результат = ИзменитьРеквизитыОбъектовНаСервере(Параметры);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ВычислитьЗначениеРеквизита(Знач Объект, Знач _Выражение)
	Возврат Вычислить(_Выражение);
КонецФункции

&НаСервереБезКонтекста
Процедура ВыполнитьПрограммнуюОбработку(Знач Объект, Знач _Алгоритм)
	Выполнить(_Алгоритм);
КонецПроцедуры

#КонецОбласти
