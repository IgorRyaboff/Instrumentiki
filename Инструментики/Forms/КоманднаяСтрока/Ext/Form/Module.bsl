
// --------------------------------------------------------------------------------
// Copyright (c) 2024 Igor Ryabov (https://github.com/IgorRyaboff/Instrumentiki)
// License: https://github.com/IgorRyaboff/Instrumentiki/blob/main/LICENSE
// --------------------------------------------------------------------------------

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.БезопасныйРежим Тогда
		Сообщить(НСтр("ru='Этот инструмент недоступен при работе в безопасном режиме'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если СистемнаяИнформация.ТипПлатформы <> ТипПлатформы.Windows_x86
		И СистемнаяИнформация.ТипПлатформы <> ТипПлатформы.Windows_x86_64 Тогда
		
		Сообщить(НСтр("ru='Этот инструмент доступен только при работе сервера в Windows-окружении'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Таймаут = 5;
	УбитьПроцессПослеТаймаута = Истина;
	КодЗавершения = NULL;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ВыполнитьКомандуКоманднойСтроки(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(ВРег(СтрокаСоединенияИнформационнойБазы()), "FILE=") = 1 И Не ПредупреждениеДляФайловойБазыУжеВыдано Тогда
		Ждать ПредупреждениеАсинх("Обработка запущена в файловой базе, команда будет выполнена в текущем сеансе пользователя Windows. Лучше запустить обычную командную строку");
		ПредупреждениеДляФайловойБазыУжеВыдано = Истина;
	КонецЕсли;
	
	Состояние("Выполнение команды...");
	Попытка
		Сведения = ВыполнитьКомандуНаСервере(ТекстКоманды, Таймаут, УбитьПроцессПослеТаймаута);
	Исключение
		ПоказатьПредупреждение(, ОписаниеОшибки());
		Состояние("Команда не выполнена :(");
		Возврат;
	КонецПопытки;
	
	Вывод = Сведения.Вывод;
	Если ТипЗнч(Вывод) = Тип("ДвоичныеДанные") Тогда
		Вывод = ПолучитьСтрокуИзДвоичныхДанных(Сведения.Вывод);
	КонецЕсли;
	
	РезультатВыполнения.УстановитьТекст(Вывод);
	СтатусВыполнения = Сведения.Статус;
	КодЗавершения = Сведения.КодЗавершения;
	Состояние("Команда выполнена");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Непосредственно выполняет команду, используя компоненту WScript.Shell
//
// Параметры:
//  ТекстКоманды - Строка -
//
// Возвращаемое значение:
//  Структура:
//  * Статус - Строка -
//  * КодЗавершения - Число - Код, с которым завершился процесс
//  * Вывод - ДвоичныеДанные, Строка - Вывод процесса (stdout или stderr)
&НаСервереБезКонтекста
Функция ВыполнитьКомандуНаСервере(Знач ТекстКоманды, Таймаут, УбитьПроцессПослеТаймаута)
	Результат = Новый Структура("Статус, КодЗавершения, Вывод", "", NULL, ПолучитьДвоичныеДанныеИзСтроки(""));
	
	Wsh = Новый COMОбъект("WScript.Shell");
	
	WshExec = Wsh.Exec("cmd");
	WshExec.StdIn.WriteLine("chcp 1252>nul");
	WshExec.StdIn.WriteLine(ТекстКоманды);
	WshExec.StdIn.WriteLine("exit");
	
	НачалоВыполнения = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ЧитатьВывод = Истина;
	
	Пока WshExec.Status = 0 Цикл
		Если ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоВыполнения > (Таймаут * 1000) Тогда
			Если УбитьПроцессПослеТаймаута Тогда
				WshExec.Terminate();
			Иначе
				ЧитатьВывод = Ложь;
			КонецЕсли;
			Результат.Статус = "Истёк таймаут";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Результат.КодЗавершения = WshExec.ExitCode;
	Вывод = ?(ЧитатьВывод, СокрЛП(WshExec.StdOut.ReadAll()), "");
	ВыводОшибка = ?(ЧитатьВывод, СокрЛП(WshExec.StdErr.ReadAll()), "");
	
	Если ЗначениеЗаполнено(Вывод) Тогда
		Если ПустаяСтрока(Результат.Статус) Тогда
			Результат.Статус = "Успешно";
		КонецЕсли;
		Результат.Вывод = ПолучитьДвоичныеДанныеИзСтроки(Вывод);
	ИначеЕсли ЗначениеЗаполнено(ВыводОшибка) Тогда
		Если ПустаяСтрока(Результат.Статус) Тогда
			Результат.Статус = "Процесс сообщил об ошибке";
		КонецЕсли;
		Результат.Вывод = ПолучитьДвоичныеДанныеИзСтроки(ВыводОшибка);
	Иначе
		Если ПустаяСтрока(Результат.Статус) Тогда
			Результат.Статус = "Успешно";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти
