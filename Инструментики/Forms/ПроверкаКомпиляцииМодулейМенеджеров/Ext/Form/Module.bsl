
// --------------------------------------------------------------------------------
// Copyright (c) 2024 Igor Ryabov (https://github.com/IgorRyaboff/Instrumentiki)
// License: https://github.com/IgorRyaboff/Instrumentiki/blob/main/LICENSE
// --------------------------------------------------------------------------------

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.Справочники);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.Документы);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.ЖурналыДокументов);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.Перечисления);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.Отчеты);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.Обработки);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.ПланыВидовХарактеристик);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.ПланыСчетов);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.ПланыВидовРасчета);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.РегистрыСведений);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.РегистрыНакопления);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.РегистрыБухгалтерии);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.РегистрыРасчета);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.БизнесПроцессы);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.Задачи);
	ЗаполнитьСписокОбъектамиИзКоллекции(Метаданные.ПланыОбмена);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	#Если Не ТолстыйКлиентУправляемоеПриложение Тогда
		ПоказатьПредупреждение(, НСтр("ru='Данный инструмент предназначен для работы в режиме ""Толстый клиент""'"));
		Отказ = Истина;
	#КонецЕсли
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодзаголовокФормыПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ПодзаголовокФормы) Тогда
		Заголовок = СтрШаблон(НСтр("ru='%1: Проверка компиляции модулей менеджеров'"), ПодзаголовокФормы);
	Иначе
		Заголовок = НСтр("ru='Проверка компиляции модулей менеджеров'");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ВыполнитьПроверку(Команда)
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		Ответ = Ждать ВопросАсинх(НСтр("ru = 'Ошибка компиляции модуля менеджера - это критическая ошибка, при возникновении которой работа не может быть продолжена.
                                        |При возникновении такой ошибки будет предложен только перезапуск и завершение работы.
                                        |Убедитесь, что в текущем сеансе нет несохраненных данных.
                                        |Начать проверку?'"), РежимДиалогаВопрос.ДаНет,,, НСтр("ru='Важная информация'"));
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		ТекИндекс = 0;
		Для Каждого СтрСписок Из Список Цикл
			Состояние(НСтр("ru='Проверяем...'"), Цел(ТекИндекс / Список.Количество() * 100));
			ТекИндекс = ТекИндекс + 1;
			
			ИмяТипа = СтрЗаменить(СтрСписок.ИмяОбъектаМетаданных, ".", "Менеджер.");
			Менеджер = Новый(ИмяТипа);
			
			// Если пришли сюда, значит менеджер скомпилировался
		КонецЦикла;
		
		Состояние();
		ПоказатьПредупреждение(, НСтр("ru='Все модули менеджеров в конфигурации успешно компилируются в толстом клиенте'"));
	#КонецЕсли
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//
// Параметры:
//  КоллекцияОбъектовМетаданных - КоллекцияОбъектовМетаданных -
&НаСервере
Процедура ЗаполнитьСписокОбъектамиИзКоллекции(КоллекцияОбъектовМетаданных)
	Для Каждого ОбъектМетаданных Из КоллекцияОбъектовМетаданных Цикл
		СтрСписок = Список.Добавить();
		СтрСписок.ИмяОбъектаМетаданных = ОбъектМетаданных.ПолноеИмя();
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
