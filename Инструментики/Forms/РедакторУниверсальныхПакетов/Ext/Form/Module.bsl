
// --------------------------------------------------------------------------------
// Copyright (c) 2024 Igor Ryabov (https://github.com/IgorRyaboff/Instrumentiki)
// License: https://github.com/IgorRyaboff/Instrumentiki/blob/main/LICENSE
// --------------------------------------------------------------------------------

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.БезопасныйРежим Тогда
		Сообщить(НСтр("ru='Этот инструмент недоступен при работе в безопасном режиме'"));
		Отказ = Истина;
		Возврат
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ОткрытьФайл(Команда)
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Фильтр = "Универсальный пакет Инструментиков (*.xml)|*.xml";
	
	ОписаниеФайла = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога, ЭтаФорма.УникальныйИдентификатор);
	Если ОписаниеФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПрочитатьПакет(ОписаниеФайла.Адрес);
КонецПроцедуры

&НаКлиенте
Асинх Процедура СохранитьФайл(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	АдресВХ = СформироватьПакет(ЭтаФорма.УникальныйИдентификатор);
	
	#Если ВебКлиент Тогда
		Ждать ПолучитьФайлССервераАсинх(АдресВХ, "Универсальный пакет.xml", Новый ПараметрыДиалогаПолученияФайлов);
	#Иначе
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		Диалог.Фильтр = "Файл сохраняемых данных (*.xml)|*.xml";
		ВыбранныеФайлы = Ждать Диалог.ВыбратьАсинх();
		Если ВыбранныеФайлы = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Ждать ПолучитьФайлССервераАсинх(АдресВХ, ВыбранныеФайлы[0]);
	#КонецЕсли
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Читает данные открытого пользователем пакета
//
// Параметры:
//  АдресВХ - Строка - Адрес файла во временном хранилище
&НаСервере
Процедура ПрочитатьПакет(АдресВХ)
	ВерсияФорматаФайла = "";
	ИмяТипаОбъекта = "";
	СодержимоеОбъекта = "";
	
	МодульОбъекта = РеквизитФормыВЗначение("Объект");
	
	Содержимое = ПолучитьИзВременногоХранилища(АдресВХ);
	Если ТипЗнч(Содержимое) = Тип("ДвоичныеДанные") Тогда
		Содержимое = ПолучитьСтрокуИзДвоичныхДанных(Содержимое);
	КонецЕсли;
	УдалитьФайлы(АдресВХ);
	
	Фабрика = МодульОбъекта.ФабрикаXDTO(1);
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Содержимое);
	Пакет = Фабрика.ПрочитатьXML(ЧтениеXML, Фабрика.Тип("instrumentiki", "УниверсальныйПакет"));
	ЧтениеXML.Закрыть();
	Пакет.Проверить();
	
	ВерсияФорматаФайла = Пакет.ВерсияФормата;
	ИмяТипаОбъекта = Пакет.ИмяТипаОбъекта;
	ИмяИнструмента = Пакет.ИмяИнструмента;
	СодержимоеОбъекта = ПолучитьСтрокуИзДвоичныхДанных(Пакет.Объект);
КонецПроцедуры

// Формирует универсальный пакет и помещает его во временное хранилище
//
// Параметры:
//  ГуидФормы - УникальныйИдентификатор -
//
// Возвращаемое значение:
//  Строка - Адрес во временном хранилище
&НаСервере
Функция СформироватьПакет(ГуидФормы)
	МодульОбъекта = РеквизитФормыВЗначение("Объект");
	
	Фабрика = МодульОбъекта.ФабрикаXDTO(1);
	
	ТипКорневойЭлемент = Фабрика.Тип("instrumentiki", "УниверсальныйПакет");
	УпакованныйОбъект = Фабрика.Создать(ТипКорневойЭлемент);
	УпакованныйОбъект.ВерсияФормата = ВерсияФорматаФайла;
	УпакованныйОбъект.ИмяТипаОбъекта = ИмяТипаОбъекта;
	УпакованныйОбъект.ИмяИнструмента = ИмяИнструмента;
	
	УпакованныйОбъект.Объект = ПолучитьДвоичныеДанныеИзСтроки(СодержимоеОбъекта);
	УпакованныйОбъект.Проверить();
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку();
	Фабрика.ЗаписатьXML(Запись, УпакованныйОбъект);
	
	Результат = Запись.Закрыть();
	
	АдресВХ = ПоместитьВоВременноеХранилище(Результат, ГуидФормы);
	Возврат АдресВХ;
КонецФункции

#КонецОбласти
